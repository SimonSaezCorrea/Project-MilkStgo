CREAR UN VOLUMEN PARA PERSISTENCIA DE DATOS

---------- VOLUME ---------------

docker volume prune -> Limpia los volumenes que se hayan creado anteriormente

docker volume ls -> Muestra los volumenes existentes

docker volume create <Nombre> -> Crea un volume donde <Nombre> será el nombre necesario para más adelante
	- Nombre: MilkStgo
	=> docker volume create MilkStgo


----------- IMAGEN ---------------

docker build -t <Nombre Usuario de docker>/<Nombre Repositorio> . -> Se crea la imagen de nuestro proyecto de manera local
	- Nombre de Usuario de docker: simonsaez
	- Nombre Repositorio: project-milkstgo
	=> docker build -t simonsaez/project-milkstgo .

docker push <nombre_usuario>/<nombre_repositorio> -> Para subir la capas de la imagen a docker
	- Nombre de Usuario de docker: simonsaez
	- Nombre Repositorio: project-milkstgo
	=> docker push simonsaez/project-milkstgo

docker image ls -> Se ven las imagenes creadas

docker rmi <Nombre de la imagen> -> Eliminar la imagen
	- Nombre de la imagen: simonsaez/project-milkstgo
	=> docker rmi simonsaez/project-milkstgo


----------- DOCKER COMPOSE --------------------

docker-compose up -> Crea y levanta el contenedor

docker ps -> Muestra los contenedores

docker rm -f <Nombre Contenedor> -> Elimina el contenedor
	- Nombre Contenedor: project-milkstgo
	=> docker rm -f project-milkstgo

docker-compose down -> Detiene la ejecución del docker compose... CTRL + C también lo detiene


----------- SONARQUBE --------------------------
mvn clean verify sonar:sonar -Dsonar.projectKey=Project-MilkStgo -Dsonar.projectName='Project-MilkStgo' -Dsonar.host.url=http://localhost:9000 -Dsonar.token=sqp_915d98b55653607e0d4098c924ced901d1747677

Identificación:
	User: admin
	Pass: Simon_789

---------- JENKINS -------------------

java -jar jenkins.war

Identificacion:
	User: simon
	Pass: Simon_789

--------- AWS -------------------

export AWS_ACCESS_KEY_ID=AKIAULPFJ5PLEOYMCZUP

export AWS_SECRET_ACCESS_KEY=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

terraform apply

chmod 400 key.pem

ssh -i key.pem ec2-user@(IP4 PUBLICA)

sudo yum update

sudo yum install docker

sudo usermod -a -G docker ec2-user

id ec2-user

newgrp docker

wget https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) 

sudo mv docker-compose-$(uname -s)-$(uname -m) /usr/local/bin/docker-compose

sudo chmod -v +x /usr/local/bin/docker-compose

sudo systemctl enable docker.service

sudo systemctl start docker.service

sudo systemctl status docker.service

vi docker-compose.yml

-> Se apreta la tecla 'a'
-> Se copia el contenido del archivo "docker-compose.yml"
-> Se apreta la tecla 'esc'
-> Se escribe ":wq"

mkdir nginx

cd nginx

mkdir conf.d

cd conf.d

vi project-milkstgo.conf


-> Se apreta la tecla 'a'
-> Se copia el contenido del archivo "milkstgo.conf"
-> Se apreta la tecla 'esc'
-> Se escribe ":wq"

cd

docker-compose --compatibility up

-> Para bajar docker

docker-compose down

exit

terraform destroy